{
  "bootVersion": "3.0.3",
  "dependencies": {
    "actuator": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-actuator",
      "scope": "compile"
    },
    "data-redis-reactive": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-redis-reactive",
      "scope": "compile"
    },
    "camel": {
      "groupId": "org.apache.camel.springboot",
      "artifactId": "camel-spring-boot-starter",
      "version": "4.0.0-M1",
      "scope": "compile"
    },
    "cloud-contract-stub-runner": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-contract-stub-runner",
      "scope": "test",
      "bom": "spring-cloud"
    },
    "validation": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-validation",
      "scope": "compile"
    },
    "azure-support": {
      "groupId": "com.azure.spring",
      "artifactId": "spring-cloud-azure-starter",
      "scope": "compile",
      "bom": "spring-cloud-azure"
    },
    "cloud-starter-zookeeper-config": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-zookeeper-config",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "cache": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-cache",
      "scope": "compile"
    },
    "spring-shell": {
      "groupId": "org.springframework.shell",
      "artifactId": "spring-shell-starter",
      "scope": "compile",
      "bom": "spring-shell"
    },
    "zipkin": {
      "groupId": "io.zipkin.reporter2",
      "artifactId": "zipkin-reporter-brave",
      "scope": "compile"
    },
    "data-rest-explorer": {
      "groupId": "org.springframework.data",
      "artifactId": "spring-data-rest-hal-explorer",
      "scope": "compile"
    },
    "codecentric-spring-boot-admin-client": {
      "groupId": "de.codecentric",
      "artifactId": "spring-boot-admin-starter-client",
      "scope": "compile",
      "bom": "codecentric-spring-boot-admin"
    },
    "azure-keyvault": {
      "groupId": "com.azure.spring",
      "artifactId": "spring-cloud-azure-starter-keyvault",
      "scope": "compile",
      "bom": "spring-cloud-azure"
    },
    "data-cassandra": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-cassandra",
      "scope": "compile"
    },
    "cloud-starter-consul-discovery": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-consul-discovery",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "kafka": {
      "groupId": "org.springframework.kafka",
      "artifactId": "spring-kafka",
      "scope": "compile"
    },
    "azure-active-directory": {
      "groupId": "com.azure.spring",
      "artifactId": "spring-cloud-azure-starter-active-directory",
      "scope": "compile",
      "bom": "spring-cloud-azure"
    },
    "integration": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-integration",
      "scope": "compile"
    },
    "cloud-config-server": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-config-server",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "freemarker": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-freemarker",
      "scope": "compile"
    },
    "native": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot",
      "scope": "compile"
    },
    "web": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-web",
      "scope": "compile"
    },
    "data-cassandra-reactive": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-cassandra-reactive",
      "scope": "compile"
    },
    "picocli": {
      "groupId": "info.picocli",
      "artifactId": "picocli-spring-boot-starter",
      "version": "4.7.0",
      "scope": "compile"
    },
    "hsql": {
      "groupId": "org.hsqldb",
      "artifactId": "hsqldb",
      "scope": "runtime"
    },
    "datadog": {
      "groupId": "io.micrometer",
      "artifactId": "micrometer-registry-datadog",
      "scope": "runtime"
    },
    "groovy-templates": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-groovy-templates",
      "scope": "compile"
    },
    "data-couchbase-reactive": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-couchbase-reactive",
      "scope": "compile"
    },
    "devtools": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-devtools",
      "scope": "runtime"
    },
    "graphql": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-graphql",
      "scope": "compile"
    },
    "oauth2-client": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-oauth2-client",
      "scope": "compile"
    },
    "testcontainers": {
      "groupId": "org.testcontainers",
      "artifactId": "junit-jupiter",
      "scope": "test",
      "bom": "testcontainers"
    },
    "cloud-starter": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "amqp": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-amqp",
      "scope": "compile"
    },
    "rsocket": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-rsocket",
      "scope": "compile"
    },
    "cloud-task": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-task",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "cloud-bus": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-bus",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "kafka-streams": {
      "groupId": "org.apache.kafka",
      "artifactId": "kafka-streams",
      "scope": "compile"
    },
    "cloud-resilience4j": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-circuitbreaker-resilience4j",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "db2": {
      "groupId": "com.ibm.db2",
      "artifactId": "jcc",
      "scope": "runtime"
    },
    "unboundid-ldap": {
      "groupId": "com.unboundid",
      "artifactId": "unboundid-ldapsdk",
      "scope": "test"
    },
    "data-ldap": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-ldap",
      "scope": "compile"
    },
    "okta": {
      "groupId": "com.okta.spring",
      "artifactId": "okta-spring-boot-starter",
      "version": "3.0.2",
      "scope": "compile"
    },
    "data-neo4j": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-neo4j",
      "scope": "compile"
    },
    "data-rest": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-rest",
      "scope": "compile"
    },
    "new-relic": {
      "groupId": "io.micrometer",
      "artifactId": "micrometer-registry-new-relic",
      "scope": "runtime"
    },
    "mail": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-mail",
      "scope": "compile"
    },
    "distributed-tracing": {
      "groupId": "io.micrometer",
      "artifactId": "micrometer-tracing-bridge-brave",
      "scope": "compile"
    },
    "cloud-stream": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-stream",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "graphite": {
      "groupId": "io.micrometer",
      "artifactId": "micrometer-registry-graphite",
      "scope": "runtime"
    },
    "liquibase": {
      "groupId": "org.liquibase",
      "artifactId": "liquibase-core",
      "scope": "compile"
    },
    "websocket": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-websocket",
      "scope": "compile"
    },
    "derby": {
      "groupId": "org.apache.derby",
      "artifactId": "derby",
      "scope": "runtime"
    },
    "mysql": {
      "groupId": "com.mysql",
      "artifactId": "mysql-connector-j",
      "scope": "runtime"
    },
    "data-couchbase": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-couchbase",
      "scope": "compile"
    },
    "cloud-starter-consul-config": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-consul-config",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "web-services": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-web-services",
      "scope": "compile"
    },
    "cloud-loadbalancer": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-loadbalancer",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "oracle": {
      "groupId": "com.oracle.database.jdbc",
      "artifactId": "ojdbc8",
      "scope": "runtime"
    },
    "configuration-processor": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-configuration-processor",
      "scope": "annotationProcessor"
    },
    "flyway": {
      "groupId": "org.flywaydb",
      "artifactId": "flyway-core",
      "scope": "compile"
    },
    "batch": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-batch",
      "scope": "compile"
    },
    "data-jpa": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-jpa",
      "scope": "compile"
    },
    "thymeleaf": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-thymeleaf",
      "scope": "compile"
    },
    "cloud-eureka": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-netflix-eureka-client",
      "scope": "compile",
      "bom": "spring-cloud",
      "repository": "netflix-candidates"
    },
    "data-jdbc": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-jdbc",
      "scope": "compile"
    },
    "lombok": {
      "groupId": "org.projectlombok",
      "artifactId": "lombok",
      "scope": "annotationProcessor"
    },
    "cloud-starter-vault-config": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-vault-config",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "codecentric-spring-boot-admin-server": {
      "groupId": "de.codecentric",
      "artifactId": "spring-boot-admin-starter-server",
      "scope": "compile",
      "bom": "codecentric-spring-boot-admin"
    },
    "data-redis": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-redis",
      "scope": "compile"
    },
    "wavefront": {
      "groupId": "com.wavefront",
      "artifactId": "wavefront-spring-boot-starter",
      "scope": "runtime",
      "bom": "wavefront"
    },
    "cloud-starter-zookeeper-discovery": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-zookeeper-discovery",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "session": {
      "groupId": "org.springframework.session",
      "artifactId": "spring-session-core",
      "scope": "compile"
    },
    "mybatis": {
      "groupId": "org.mybatis.spring.boot",
      "artifactId": "mybatis-spring-boot-starter",
      "version": "3.0.0",
      "scope": "compile"
    },
    "webflux": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-webflux",
      "scope": "compile"
    },
    "data-r2dbc": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-r2dbc",
      "scope": "compile"
    },
    "data-mongodb": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-mongodb",
      "scope": "compile"
    },
    "jdbc": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-jdbc",
      "scope": "compile"
    },
    "h2": {
      "groupId": "com.h2database",
      "artifactId": "h2",
      "scope": "runtime"
    },
    "cloud-contract-verifier": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-contract-verifier",
      "scope": "test",
      "bom": "spring-cloud"
    },
    "mustache": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-mustache",
      "scope": "compile"
    },
    "cloud-gateway": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-gateway",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "data-mongodb-reactive": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-mongodb-reactive",
      "scope": "compile"
    },
    "cloud-gcp-pubsub": {
      "groupId": "com.google.cloud",
      "artifactId": "spring-cloud-gcp-starter-pubsub",
      "scope": "compile",
      "bom": "spring-cloud-gcp"
    },
    "cloud-feign": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-openfeign",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "security": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-security",
      "scope": "compile"
    },
    "sqlserver": {
      "groupId": "com.microsoft.sqlserver",
      "artifactId": "mssql-jdbc",
      "scope": "runtime"
    },
    "postgresql": {
      "groupId": "org.postgresql",
      "artifactId": "postgresql",
      "scope": "runtime"
    },
    "jersey": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-jersey",
      "scope": "compile"
    },
    "jooq": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-jooq",
      "scope": "compile"
    },
    "hateoas": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-hateoas",
      "scope": "compile"
    },
    "prometheus": {
      "groupId": "io.micrometer",
      "artifactId": "micrometer-registry-prometheus",
      "scope": "runtime"
    },
    "oauth2-resource-server": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-oauth2-resource-server",
      "scope": "compile"
    },
    "data-elasticsearch": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-data-elasticsearch",
      "scope": "compile"
    },
    "artemis": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-artemis",
      "scope": "compile"
    },
    "influx": {
      "groupId": "io.micrometer",
      "artifactId": "micrometer-registry-influx",
      "scope": "runtime"
    },
    "restdocs": {
      "groupId": "org.springframework.restdocs",
      "artifactId": "spring-restdocs-mockmvc",
      "scope": "test"
    },
    "quartz": {
      "groupId": "org.springframework.boot",
      "artifactId": "spring-boot-starter-quartz",
      "scope": "compile"
    },
    "cloud-gcp-storage": {
      "groupId": "com.google.cloud",
      "artifactId": "spring-cloud-gcp-starter-storage",
      "scope": "compile",
      "bom": "spring-cloud-gcp"
    },
    "cloud-function": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-function-context",
      "scope": "compile",
      "bom": "spring-cloud"
    },
    "mariadb": {
      "groupId": "org.mariadb.jdbc",
      "artifactId": "mariadb-java-client",
      "scope": "runtime"
    },
    "azure-storage": {
      "groupId": "com.azure.spring",
      "artifactId": "spring-cloud-azure-starter-storage",
      "scope": "compile",
      "bom": "spring-cloud-azure"
    },
    "cloud-eureka-server": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-netflix-eureka-server",
      "scope": "compile",
      "bom": "spring-cloud",
      "repository": "netflix-candidates"
    },
    "cloud-gcp": {
      "groupId": "com.google.cloud",
      "artifactId": "spring-cloud-gcp-starter",
      "scope": "compile",
      "bom": "spring-cloud-gcp"
    },
    "cloud-config-client": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-starter-config",
      "scope": "compile",
      "bom": "spring-cloud"
    }
  },
  "repositories": {
    "netflix-candidates": {
      "name": "Netflix Candidates",
      "url": "https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates",
      "snapshotEnabled": false
    }
  },
  "boms": {
    "spring-cloud-azure": {
      "groupId": "com.azure.spring",
      "artifactId": "spring-cloud-azure-dependencies",
      "version": "5.0.0",
      "repositories": []
    },
    "codecentric-spring-boot-admin": {
      "groupId": "de.codecentric",
      "artifactId": "spring-boot-admin-dependencies",
      "version": "3.0.0-M4",
      "repositories": []
    },
    "spring-cloud": {
      "groupId": "org.springframework.cloud",
      "artifactId": "spring-cloud-dependencies",
      "version": "2022.0.1",
      "repositories": []
    },
    "spring-shell": {
      "groupId": "org.springframework.shell",
      "artifactId": "spring-shell-dependencies",
      "version": "3.0.0",
      "repositories": []
    },
    "testcontainers": {
      "groupId": "org.testcontainers",
      "artifactId": "testcontainers-bom",
      "version": "1.17.6",
      "repositories": []
    },
    "spring-cloud-gcp": {
      "groupId": "com.google.cloud",
      "artifactId": "spring-cloud-gcp-dependencies",
      "version": "4.1.1",
      "repositories": []
    },
    "wavefront": {
      "groupId": "com.wavefront",
      "artifactId": "wavefront-spring-boot-bom",
      "version": "3.0.1",
      "repositories": []
    }
  }
}
